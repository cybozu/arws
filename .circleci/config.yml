version: 2.1

#
# Workflows
#
workflows:
  version: 2
  continuous-integration:
    jobs:
      - static-analysis
      - test
      - validate-renovate-config
      - package:
          requires:
            - static-analysis
            - test
  release:
    jobs:
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/

#
# Jobs
#
jobs:
  # Static Analysis
  static-analysis:
    executor: golang-executor
    environment:
      GOLANGCILINT_VERSION: 1.30.0
    steps:
      - checkout
      - run:
          name: Install GolangCI-Lint
          command: |
            # See https://github.com/golangci/golangci-lint#ci-installation
            # The need for `sudo` is to avoid this issue: https://github.com/golangci/golangci-lint/issues/250
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
              sh -s -- -b $(go env GOPATH)/bin v${GOLANGCILINT_VERSION}
      - workaround-golang-issue-30068
      - run:
          name: Analyze code for potential errors
          command: |
            make lint
  # Test
  test:
    executor: golang-executor
    steps:
      - checkout
      - with-go-modules-cache:
          steps-requiring-cache:
            - workaround-golang-issue-30068
            - run:
                name: Test packages
                command: |
                  make test
      - store_test_results:
          path: test-results
  # Package
  package:
    executor: golang-executor
    steps:
      - checkout
      - with-go-modules-cache:
          steps-requiring-cache:
            - workaround-golang-issue-30068
            - run:
                name: Install goreleaser
                command: |
                  curl -sL https://github.com/goreleaser/goreleaser/releases/download/v0.104.1/goreleaser_amd64.deb > /tmp/goreleaser_amd64.deb
                  sudo dpkg -i /tmp/goreleaser_amd64.deb
            - run:
                name: Package binaries
                command: |
                  make package
  # Release
  release:
    executor: golang-executor
    steps:
      - checkout
      - with-go-modules-cache:
          steps-requiring-cache:
            - run:
                name: Upload GitHub Release
                environment:
                  VERSION: v0.104.1
                command: curl -sL https://git.io/goreleaser | bash

  # Validate renovate config
  validate-renovate-config:
    executor: renovate-executor
    steps:
      - checkout
      - run:
          name: Validate renovate config
          command: |
            renovate-config-validator

#
# Executors
#
executors:
  golang-executor:
    docker:
      - image: circleci/golang:1.15.2

  renovate-executor:
    docker:
      - image: renovate/renovate:23.25.1-slim
      
#
# Commands
#
commands:
  workaround-golang-issue-30068:
    description: |
      cmd/go: race causes `go mod download` to error with `mkdir /go/pkg/mod..: no such file or directory`
      https://github.com/golang/go/issues/30068
    steps:
      - run:
          name: "Workaround for golang/go#30068"
          command: |
            mkdir -p /go/pkg/mod
  with-go-modules-cache:
    parameters:
      steps-requiring-cache:
        type: steps
        default: []
    steps:
      - run:
          name: Generate Go version file
          command: go version > /go/version
      - restore_cache:
          name: Restore Go Modules cache
          keys:
            - go-mod-v1-{{ checksum "/go/version" }}-{{ checksum "go.mod" }}
            - go-mod-v1-{{ checksum "/go/version" }}-
      - << parameters.steps-requiring-cache >>
      - save_cache:
          name: Save Go Modules cache
          key: go-mod-v1-{{ checksum "/go/version" }}-{{ checksum "go.mod" }}
          paths:
            - "/go/pkg/mod"
